#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Chrome —á–µ—Ä–µ–∑ SSH —Ç—É–Ω–Ω–µ–ª—å
"""
import asyncio
from playwright.async_api import async_playwright

async def test_remote_connection():
    """–¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    ws_url = "ws://localhost:9223/devtools/browser/5388b816-d0d0-430e-9f51-365f47c85264"
    
    print(f"üîó Connecting to: {ws_url}")
    
    try:
        async with async_playwright() as p:
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –±—Ä–∞—É–∑–µ—Ä—É
            browser = await p.chromium.connect_over_cdp(ws_url)
            print("‚úÖ Successfully connected to remote browser!")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ
            contexts = browser.contexts
            print(f"üìã Browser contexts: {len(contexts)}")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
            context = await browser.new_context()
            page = await context.new_page()
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            print("üåê Navigating to the-internet.herokuapp.com...")
            await page.goto("https://the-internet.herokuapp.com/")
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            title = await page.title()
            print(f"üìÑ Page title: {title}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
            assert "The Internet" in title, f"Expected 'The Internet' in title, got: {title}"
            print("‚úÖ Test passed! Remote testing is working!")
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º
            await context.close()
            # –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º browser - —ç—Ç–æ —É–¥–∞–ª–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False
    
    return True

if __name__ == "__main__":
    result = asyncio.run(test_remote_connection())
    exit(0 if result else 1) 