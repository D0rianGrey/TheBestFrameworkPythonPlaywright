#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ —Å —Ä–∞–∑–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏
# –ê–Ω–∞–ª–æ–≥ java.test.config –¥–ª—è Python + Playwright

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
print_header() {
    echo -e "${BLUE}========================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}========================================${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —É—Å–ø–µ—Ö–∞
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏
print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
show_help() {
    echo "üöÄ Test Runner with Configuration Support"
    echo ""
    echo "Usage: $0 [CONFIG] [OPTIONS]"
    echo ""
    echo "Available Configurations:"
    echo "  local           - Local testing (default)"
    echo "  remote          - Remote testing"
    echo "  remote-selenium - Remote Selenium Grid"
    echo "  headless        - Headless local testing"
    echo ""
    echo "Options:"
    echo "  -h, --help      - Show this help"
    echo "  -v, --verbose   - Verbose output"
    echo "  -k PATTERN      - Run tests matching pattern"
    echo "  --markers       - Show available pytest markers"
    echo ""
    echo "Examples:"
    echo "  $0 local                    # Run local tests"
    echo "  $0 remote                   # Run remote tests"
    echo "  $0 headless -k test_simple  # Run specific test headless"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
set_configuration() {
    local config_name=$1
    
    case $config_name in
        "local")
            export TEST_MODE="local"
            export BROWSER="chromium"
            export HEADLESS="false"
            print_success "Local configuration set"
            ;;
        "remote")
            export TEST_MODE="remote"
            export REMOTE_MAC_IP="192.168.195.104"
            export REMOTE_PORT="9222"
            export SERVICE_TYPE="chrome"
            print_success "Remote configuration set"
            ;;
        "remote-selenium")
            export TEST_MODE="remote"
            export REMOTE_MAC_IP="192.168.195.104"
            export REMOTE_PORT="4444"
            export SERVICE_TYPE="selenium"
            print_success "Remote Selenium Grid configuration set"
            ;;
        "headless")
            export TEST_MODE="local"
            export HEADLESS="true"
            print_success "Headless local configuration set"
            ;;
        *)
            print_error "Unknown configuration: $config_name"
            echo "Available configurations: local, remote, remote-selenium, headless"
            exit 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
show_current_config() {
    print_header "Current Configuration"
    python3 -c "
import sys
sys.path.insert(0, '.')
from config.config_manager import ConfigManager
config = ConfigManager('config/test_config.json')
config.print_current_config()
config.print_env_vars()
"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    print_header "Checking Dependencies"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    if ! command -v python3 &> /dev/null; then
        print_error "Python3 is not installed"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [[ -z "$VIRTUAL_ENV" && ! -d ".venv" ]]; then
        print_warning "Virtual environment not detected"
        print_warning "Consider activating virtual environment: source .venv/bin/activate"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pytest
    if ! python3 -c "import pytest" &> /dev/null; then
        print_error "pytest is not installed. Run: pip install -r requirements.txt"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ playwright
    if ! python3 -c "import playwright" &> /dev/null; then
        print_error "playwright is not installed. Run: pip install -r requirements.txt"
        exit 1
    fi
    
    print_success "All dependencies are available"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
run_tests() {
    local pytest_args=("$@")
    
    print_header "Running Tests"
    
    # –ë–∞–∑–æ–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã pytest
    local base_args=(
        "tests/"
        "-v"
        "--tb=short"
        "--color=yes"
    )
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –±–∞–∑–æ–≤—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏
    local final_args=("${base_args[@]}" "${pytest_args[@]}")
    
    echo "Command: python3 -m pytest ${final_args[*]}"
    echo ""
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    if python3 -m pytest "${final_args[@]}"; then
        print_success "Tests completed successfully"
    else
        print_error "Tests failed"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    local config_name="local"
    local pytest_args=()
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            -h|--help)
                show_help
                exit 0
                ;;
            --markers)
                python3 -m pytest --markers
                exit 0
                ;;
            local|remote|remote-selenium|headless)
                config_name=$1
                shift
                ;;
            *)
                # –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ pytest
                pytest_args+=("$1")
                shift
                ;;
        esac
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    set_configuration "$config_name"
    
    # –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    show_current_config
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    run_tests "${pytest_args[@]}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 